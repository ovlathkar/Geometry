def CheckOnsegment(p,q,r):
    if ((q.x <= max(p.x, r.x) and  q.x >= min(p.x, r.x) and
            q.y <= max(p.y, r.y) and q.y >= min(p.y, r.y))):
        return True
    else:
        return False
def CheckOrientation(p, q, r):
    orientation = ((q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y))
    if (orientation == 0):
        return 0
    elif (orientation > 0):
        return 1
    else:
        return 2
def CheckIntersection(p1, q1, p2,q2):

    o1 = CheckOrientation(p1, q1, p2)
    o2 = CheckOrientation(p1, q1,q2)
    o3 = CheckOrientation(p2, q2, p1)
    o4 = CheckOrientation(p2,q2, q1)

    if (o1 == 0 or o2 == 0 or o3 == 0 or o4 == 0):
        return True
    else:
        return False
def CheckInside(polygon , pnt , n ):
    polygon = []
    pnt = []
    i = 0
    n = len(polygon1)/len(polygon1[0])
    if (n<3):
        return False
    while (i > 0 ):
        if CheckIntersection(polygon[i], polygon[i+1],pnt[i]):
            if (CheckOrientation(polygon[i], polygon[i+1])==0):
                return CheckOnsegment(polygon[i], pnt [i], polygon[i+1])
            cnt = cnt + 1
    if (cnt%2 == 0):
        return False
    else:
        return True
polygon1 = [[0,0], [10,0], [10,10], [0,10]]
pnt = [20,20]
CheckInside(polygon1, pnt, n=6 )
